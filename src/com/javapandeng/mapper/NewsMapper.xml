<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javapandeng.mapper.NewsMapper">
    <!--实体类与数据库映射字段部分-->
    <resultMap id="ResultMapNews" type="com.javapandeng.po.News">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="addTime" column="addTime" jdbcType="DATE"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
    </resultMap>



    <!-- 声明数据库字段 -->
    <sql id="News_field">
        id,content,addTime,name
    </sql>

    <!-- 实体类属性-->
    <sql id="News_insert">
        #{id},#{content},#{addTime},#{name}
    </sql>

    <!-- 更新结果  -->
    <sql id="News_update">
        <if test="content != null">
            content = #{content},
        </if>
        <if test="addTime != null">
            addTime = #{addTime},
        </if>
        <if test="name != null">
            name = #{name},
        </if>


    </sql>

    <!-- 查询时条件   -->
    <sql id="News_where">
        <if test="id != null">
            and id = #{id}
        </if>
        <if test="content != null">
            and content = #{content}
        </if>
        <if test="addTime != null">
            and addTime = #{addTime}
        </if>
        <if test="name != null">
            and name = #{name}
        </if>

    </sql>

    <!--    新增        -->
    <!--    参数：实体类-->
    <!--    返回：主键 -->
    <insert id="insert" parameterType="com.javapandeng.po.News" useGeneratedKeys="true" keyProperty="id">
        insert into news(
        <include refid="News_field"/>
        ) values(
        <include refid="News_insert"/>
        )
    </insert>

    <!-- 根据实体主键删除一个实体-->
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from news where id=#{id}
    </delete>

    <!-- 通过实体删除-->
    <delete id="deleteByEntity" parameterType="com.javapandeng.po.News">
        delete from news where 1=1
        <include refid="News_where"/>
    </delete>

    <!-- 通过map删除 -->
    <delete id="deleteByMap" parameterType="java.util.HashMap">
        delete from news where 1=1
        <include refid="News_where"/>
    </delete>

    <!-- 更新一个实体 -->
    <update id="update" parameterType="com.javapandeng.po.News">
        update news
        <set>
            <include refid="News_update"/>
        </set>
        where 1=1
            <include refid="News_where"/>
    </update>

    <!-- 通过id进行修改-->
    <update id="updateById" parameterType="com.javapandeng.po.News">
        update news
        <set>
            <include refid="News_update"/>
        </set>
        where id=#{id}
    </update>

    <!-- 根据参数查询-->
    <select id="listByMap" resultMap="ResultMapNews" parameterType="map">
        select <include refid="News_field"/>
        from news where 1=1
        <include refid="News_where"/>
    </select>

    <!-- 查询整个表 -->
    <select id="listAll" resultMap="ResultMapNews">
        select <include refid="News_field"/>
        from news
    </select>

    <!-- 查询所有实体,根据实体属性值为判断条件查询所有实体-->
    <select id="listAllByEntity" resultMap="ResultMapNews" parameterType="com.javapandeng.po.News">
        select <include refid="News_field"/>
        from news where 1=1
        <include refid="News_where"/>
    </select>

    <!-- 根据主键获取一个实体-->
    <select id="load" resultMap="ResultMapNews" parameterType="java.lang.Integer">
        select <include refid="News_field"/>
        from news where id=#{id}
    </select>

    <!-- 根据主键获取一个实体-->
    <select id="getById" resultMap="ResultMapNews" parameterType="java.lang.Integer">
        select <include refid="News_field"/>
        from news where id=#{id}
    </select>

    <!-- 通过map查询-->
    <select id="getByMap" resultMap="ResultMapNews" parameterType="map">
        select <include refid="News_field"/>
        from news where 1=1
        <include refid="News_where"/>
    </select>

    <!--通过对象查询-不分页-->
    <select id="getByEntity" resultMap="ResultMapNews" parameterType="com.javapandeng.po.News">
        select <include refid="News_field"/>
        from news where 1=1
        <include refid="News_where"/>
    </select>

    <!-- 通过map查询分页-->
    <select id="findByMap" resultMap="ResultMapNews" parameterType="map">
        select <include refid="News_field"/>
        from news where 1=1
        <include refid="News_where"/>
    </select>

    <!--通过对象查询分页-->
    <select id="findByEntity" resultMap="ResultMapNews" parameterType="com.javapandeng.po.News">
        select <include refid="News_field"/>
        from news where 1=1
        <include refid="News_where"/>
    </select>

    <!-- 批量新增-->
    <!--<select id="insertBatch" parameterType="java.util.List">
        insert into news(
        <include refid="News_field"/>
        ) values
        <foreach collection="list" news="news" index="index" separator=",">
            (#{news.name},#{news.price},#{news.zk},#{news.scNum},#{news.gmNum},#{news.url1},#{news.url2},#{news.url3},#{news.url4},#{news.url5},#{news.ms},#{news.pam1},#{news.pam2},#{news.pam3},
            #{val1},#{news.val2},#{news.val3},#{news.type},#{news.categoryIdOne},#{news.categoryIdTwo},#{news.isDelete})
        </foreach>
    </select>-->

    <!-- 批量修改-->
    <!--<update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" news="news" index="index" separator=";">
            update news
            <set>
                <if test="news.name != null">
                    name = #{news.name},
                </if>
                <if test="news.price != null">
                    price = #{news.price},
                </if>
                <if test="news.zk != null">
                    zk = #{news.zk},
                </if>
                <if test="news.scNum != null">
                    scNum = #{news.scNum},
                </if>
                <if test="news.gmNum != null">
                    gmNum = #{news.gmNum},
                </if>
                <if test="news.url1 != null">
                    url1 = #{news.url1},
                </if>
                <if test="news.url2 != null">
                    url2 = #{news.url2},
                </if>
                <if test="news.url3 != null">
                    url3 = #{news.url3},
                </if>
                <if test="news.url4 != null">
                    url4 = #{news.url4},
                </if>
                <if test="news.url5 != null">
                    url5 = #{news.url5},
                </if>
                <if test="news.ms != null">
                    ms = #{news.ms},
                </if>
                <if test="news.pam1 != null">
                    pam1 = #{news.pam1},
                </if>
                <if test="news.pam2 != null">
                    pam2 = #{news.pam2},
                </if>
                <if test="news.pam3 != null">
                    pam3 = #{news.pam3},
                </if>
                <if test="news.val1 != null">
                    val1 = #{news.val1},
                </if>
                <if test="news.val2 != null">
                    val2 = #{news.val2},
                </if>
                <if test="news.val3 != null">
                    val3 = #{news.val3},
                </if>
                <if test="news.type != null">
                    type = #{news.type},
                </if>
                <if test="news.categoryIdOne != null">
                    category_id_one = #{news.categoryIdOne},
                </if>
                <if test="news.categoryIdTwo != null">
                    category_id_two = #{news.categoryIdTwo},
                </if>
                <if test="news.isDelete != null">
                    isDelete = #{news.isDelete}
                </if>
            </set>
            where 1=1
            <if test="news.id != null">
               and id = #{news.id}
            </if>
        </foreach>
    </update>-->

    <!-- 封装纯sql语法-->
    <!-- 查询一个对象返回map-->
    <select id="getBySqlReturnMap" resultType="map">
        ${sql}
    </select>

    <!-- 查询一个对象返回实体类-->
    <select id="getBySqlReturnEntity" resultMap="ResultMapNews">
        ${sql}
    </select>

    <!-- 查询一个对象返回map列表-->
    <select id="listBySqlReturnMap" resultType="map">
        ${sql}
    </select>

    <!-- 查询列表返回实体-->
    <select id="listBySqlReturnEntity" resultMap="ResultMapNews">
        ${sql}
    </select>

    <!-- 查询分页-->
    <select id="findBySqlReturnEntity" resultMap="ResultMapNews">
        ${sql}
    </select>

    <!-- 通过sql修改-->
    <update id="updateBysql">
        ${sql}
    </update>

    <!-- 通过sql删除-->
    <delete id="deleteBySql">
         ${sql}
    </delete>
</mapper>