<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javapandeng.mapper.MessageMapper">
    <!--实体类与数据库映射字段部分-->
    <resultMap id="ResultMapMessage" type="com.javapandeng.po.Message">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
    </resultMap>



    <!-- 声明数据库字段 -->
    <sql id="Message_field">
        id,content,phone,name
    </sql>

    <!-- 实体类属性-->
    <sql id="Message_insert">
        #{id},#{content},#{phone},#{name}
    </sql>

    <!-- 更新结果  -->
    <sql id="Message_update">
        <if test="content != null">
            content = #{content},
        </if>
        <if test="phone != null">
            phone = #{phone},
        </if>
        <if test="name != null">
            name = #{name},
        </if>


    </sql>

    <!-- 查询时条件   -->
    <sql id="Message_where">
        <if test="id != null">
            and id = #{id}
        </if>
        <if test="content != null">
            and content = #{content}
        </if>
        <if test="phone != null">
            and phone = #{phone}
        </if>
        <if test="name != null">
            and name = #{name}
        </if>

    </sql>

    <!--    新增        -->
    <!--    参数：实体类-->
    <!--    返回：主键 -->
    <insert id="insert" parameterType="com.javapandeng.po.Message" useGeneratedKeys="true" keyProperty="id">
        insert into message(
        <include refid="Message_field"/>
        ) values(
        <include refid="Message_insert"/>
        )
    </insert>

    <!-- 根据实体主键删除一个实体-->
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from message where id=#{id}
    </delete>

    <!-- 通过实体删除-->
    <delete id="deleteByEntity" parameterType="com.javapandeng.po.Message">
        delete from message where 1=1
        <include refid="Message_where"/>
    </delete>

    <!-- 通过map删除 -->
    <delete id="deleteByMap" parameterType="java.util.HashMap">
        delete from message where 1=1
        <include refid="Message_where"/>
    </delete>

    <!-- 更新一个实体 -->
    <update id="update" parameterType="com.javapandeng.po.Message">
        update message
        <set>
            <include refid="Message_update"/>
        </set>
        where 1=1
            <include refid="Message_where"/>
    </update>

    <!-- 通过id进行修改-->
    <update id="updateById" parameterType="com.javapandeng.po.Message">
        update message
        <set>
            <include refid="Message_update"/>
        </set>
        where id=#{id}
    </update>

    <!-- 根据参数查询-->
    <select id="listByMap" resultMap="ResultMapMessage" parameterType="map">
        select <include refid="Message_field"/>
        from message where 1=1
        <include refid="Message_where"/>
    </select>

    <!-- 查询整个表 -->
    <select id="listAll" resultMap="ResultMapMessage">
        select <include refid="Message_field"/>
        from message
    </select>

    <!-- 查询所有实体,根据实体属性值为判断条件查询所有实体-->
    <select id="listAllByEntity" resultMap="ResultMapMessage" parameterType="com.javapandeng.po.Message">
        select <include refid="Message_field"/>
        from message where 1=1
        <include refid="Message_where"/>
    </select>

    <!-- 根据主键获取一个实体-->
    <select id="load" resultMap="ResultMapMessage" parameterType="java.lang.Integer">
        select <include refid="Message_field"/>
        from message where id=#{id}
    </select>

    <!-- 根据主键获取一个实体-->
    <select id="getById" resultMap="ResultMapMessage" parameterType="java.lang.Integer">
        select <include refid="Message_field"/>
        from message where id=#{id}
    </select>

    <!-- 通过map查询-->
    <select id="getByMap" resultMap="ResultMapMessage" parameterType="map">
        select <include refid="Message_field"/>
        from message where 1=1
        <include refid="Message_where"/>
    </select>

    <!--通过对象查询-不分页-->
    <select id="getByEntity" resultMap="ResultMapMessage" parameterType="com.javapandeng.po.Message">
        select <include refid="Message_field"/>
        from message where 1=1
        <include refid="Message_where"/>
    </select>

    <!-- 通过map查询分页-->
    <select id="findByMap" resultMap="ResultMapMessage" parameterType="map">
        select <include refid="Message_field"/>
        from message where 1=1
        <include refid="Message_where"/>
    </select>

    <!--通过对象查询分页-->
    <select id="findByEntity" resultMap="ResultMapMessage" parameterType="com.javapandeng.po.Message">
        select <include refid="Message_field"/>
        from message where 1=1
        <include refid="Message_where"/>
    </select>

    <!-- 批量新增-->
    <!--<select id="insertBatch" parameterType="java.util.List">
        insert into message(
        <include refid="Message_field"/>
        ) values
        <foreach collection="list" message="message" index="index" separator=",">
            (#{message.name},#{message.price},#{message.zk},#{message.scNum},#{message.gmNum},#{message.url1},#{message.url2},#{message.url3},#{message.url4},#{message.url5},#{message.ms},#{message.pam1},#{message.pam2},#{message.pam3},
            #{val1},#{message.val2},#{message.val3},#{message.type},#{message.categoryIdOne},#{message.categoryIdTwo},#{message.isDelete})
        </foreach>
    </select>-->

    <!-- 批量修改-->
    <!--<update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" message="message" index="index" separator=";">
            update message
            <set>
                <if test="message.name != null">
                    name = #{message.name},
                </if>
                <if test="message.price != null">
                    price = #{message.price},
                </if>
                <if test="message.zk != null">
                    zk = #{message.zk},
                </if>
                <if test="message.scNum != null">
                    scNum = #{message.scNum},
                </if>
                <if test="message.gmNum != null">
                    gmNum = #{message.gmNum},
                </if>
                <if test="message.url1 != null">
                    url1 = #{message.url1},
                </if>
                <if test="message.url2 != null">
                    url2 = #{message.url2},
                </if>
                <if test="message.url3 != null">
                    url3 = #{message.url3},
                </if>
                <if test="message.url4 != null">
                    url4 = #{message.url4},
                </if>
                <if test="message.url5 != null">
                    url5 = #{message.url5},
                </if>
                <if test="message.ms != null">
                    ms = #{message.ms},
                </if>
                <if test="message.pam1 != null">
                    pam1 = #{message.pam1},
                </if>
                <if test="message.pam2 != null">
                    pam2 = #{message.pam2},
                </if>
                <if test="message.pam3 != null">
                    pam3 = #{message.pam3},
                </if>
                <if test="message.val1 != null">
                    val1 = #{message.val1},
                </if>
                <if test="message.val2 != null">
                    val2 = #{message.val2},
                </if>
                <if test="message.val3 != null">
                    val3 = #{message.val3},
                </if>
                <if test="message.type != null">
                    type = #{message.type},
                </if>
                <if test="message.categoryIdOne != null">
                    category_id_one = #{message.categoryIdOne},
                </if>
                <if test="message.categoryIdTwo != null">
                    category_id_two = #{message.categoryIdTwo},
                </if>
                <if test="message.isDelete != null">
                    isDelete = #{message.isDelete}
                </if>
            </set>
            where 1=1
            <if test="message.id != null">
               and id = #{message.id}
            </if>
        </foreach>
    </update>-->

    <!-- 封装纯sql语法-->
    <!-- 查询一个对象返回map-->
    <select id="getBySqlReturnMap" resultType="map">
        ${sql}
    </select>

    <!-- 查询一个对象返回实体类-->
    <select id="getBySqlReturnEntity" resultMap="ResultMapMessage">
        ${sql}
    </select>

    <!-- 查询一个对象返回map列表-->
    <select id="listBySqlReturnMap" resultType="map">
        ${sql}
    </select>

    <!-- 查询列表返回实体-->
    <select id="listBySqlReturnEntity" resultMap="ResultMapMessage">
        ${sql}
    </select>

    <!-- 查询分页-->
    <select id="findBySqlReturnEntity" resultMap="ResultMapMessage">
        ${sql}
    </select>

    <!-- 通过sql修改-->
    <update id="updateBysql">
        ${sql}
    </update>

    <!-- 通过sql删除-->
    <delete id="deleteBySql">
         ${sql}
    </delete>
</mapper>