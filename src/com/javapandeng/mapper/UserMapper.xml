<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javapandeng.mapper.UserMapper">
    <resultMap id="ResultMapUser" type="com.javapandeng.po.User">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userName" column="userName" jdbcType="VARCHAR"/>
        <result property="passWord" column="passWord" jdbcType="VARCHAR"/>
        <result property="realName" column="realName" jdbcType="VARCHAR"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="User_field">
                id,
                userName,
                passWord,
                phone,
                realName,
                sex,
                address,
                email
    </sql>

    <sql id="User_insert">
        #{id},
        #{userName},
        #{passWord},
        #{phone},
        #{realName},
        #{sex},
        #{address},
        #{email}
    </sql>

    <sql id="User_if">
        <if test="id != null">
            id=#{id}
        </if>
        <if test="userName != null">
            and userName=#{userName}
        </if>
        <if test="passWord != null">
            and passWord=#{passWord}
        </if>
        <if test="phone != null">
            and phone=#{phone}
        </if>
        <if test="realName != null">
            and realName=#{realName}
        </if>
        <if test="sex != null">
            and sex=#{sex}
        </if>
        <if test="address != null">
            and address=#{address}
        </if>
        <if test="email != null">
            and email=#{email}
        </if>
    </sql>

    <sql id="User_update">

        <if test="userName != null">
            userName=#{userName},
        </if>
        <if test="passWord != null">
             passWord=#{passWord},
        </if>
        <if test="phone != null">
             phone=#{phone},
        </if>
        <if test="realName != null">
            realName=#{realName},
        </if>
        <if test="sex != null">
            sex=#{sex},
        </if>
        <if test="address != null">
             address=#{address},
        </if>
        <if test="email != null">
             email=#{email}
        </if>
    </sql>

    <insert id="insert" parameterType="com.javapandeng.po.User" useGeneratedKeys="true" keyProperty="id">



                                insert into user
                                (



        <include refid="User_field"/>



                                ) values
                                (



        <include refid="User_insert"/>



                                )



    </insert>

    <!--根据实体主键删除一个实体-->
    <delete id="deleteById">



                                delete from user where id= #{id}



    </delete>

    <!--通过实体删除-->
    <delete id="deleteByEntity">



                                delete  from user



        <where>
            <include refid="User_if"/>
        </where>
    </delete>
    <!--通过map删除-->
    <delete id="deleteByMap">



                                delete  from user where 1=1



        <include refid="User_if"/>
    </delete>

    <!--根据主键获取一个实体-->
    <select id="load" resultMap="ResultMapUser">



                                select


        <include refid="User_field"/>


                         from user where id=#{id}



    </select>

    <select id="getByMap" resultMap="ResultMapUser">



                                select


        <include refid="User_field"/>


                         from user



        <where>
            <include refid="User_if"/>
        </where>
    </select>

    <select id="getByEntity" resultMap="ResultMapUser">



                                select


        <include refid="User_field"/>


                         from user



        <where>
            <include refid="User_if"/>
        </where>
    </select>

    <!--通过id更新实体-->
    <update id="updateById">



                                update user



        <set>
            <include refid="User_update"/>
        </set>



                                where id =#{id}



    </update>
    <!--更新一个实体-->
    <update id="update">



                                update user



        <set>
            <include refid="User_update"/>
        </set>
        <where>
            <include refid="User_if"/>
        </where>
    </update>
    <!--根据参数查询-->
    <select id="listByMap" resultType="com.javapandeng.po.User">



                                select


        <include refid="User_field"/>


                         from user



        <where>
            <include refid="User_if"/>
        </where>
    </select>
    <!--查询所有实体-->
    <select id="listAll" resultType="com.javapandeng.po.User">



                                select


        <include refid="User_field"/>


                         from user



    </select>

    <select id="listAllByEntity" resultType="com.javapandeng.po.User">



                                select


        <include refid="User_field"/>


                         from user



        <where>
            <include refid="User_if"/>
        </where>
    </select>
    <!--根据主键获取实体-->
    <select id="getById" resultType="com.javapandeng.po.User">



                                select


        <include refid="User_field"/>


                         from user
                                where id =#{id};



    </select>
    <!--批量新增-->
    <insert id="insertBatch">



                                insert into user


        <include refid="User_field"/>



                                values



        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.userName},#{item.passWord},#{item.phone},#{item.realName},#{item.sex},#{item.address},#{item.email})
        </foreach>
    </insert>

    <!--批量修改-->
    <update id="updateBatch">
        <foreach collection="list" item="item" index="index" separator=";">
            update user
            <set>
                <if test="item.userName != null">
                    userName=#{item.userName},
                </if>
                <if test="item.passWord != null">
                    passWord=#{item.passWord},
                </if>
                <if test="item.phone != null">
                    phone=#{item.phone},
                </if>
                <if test="item.realName != null">
                    realName=#{item.realName},
                </if>
                <if test="item.sex != null">
                    sex=#{item.sex},
                </if>
                <if test="item.address != null">
                    address=#{item.address},
                </if>
                <if test="item.email != null">
                    email=#{item.email}
                </if>
            </set>
            <where>
                <if test="item.id !=null">
                    id =#{item.id}
                </if>
            </where>
        </foreach>
    </update>

    <!--查询一个对象返回map-->
    <!--<select id="getBySqlReturnMap" resultMap="">
        ${sql}
    </select>-->
    <!--查询一个对象返回实体类-->
    <!-- <select id="getBySqlReturnEntity" resultMap="com.javapandeng.po.User">
         ${sql}
     </select>-->
    <!--查询列表返回map-->
    <!--   <select id="listBySqlReturnMap" resultType="map">
           ${sql}
       </select>
       &lt;!&ndash;查询列表返回实体&ndash;&gt;d
       <select id="listBySqlReturnEntity" resultType="com.javapandeng.po.User">
           ${sql}
       </select>
       <select id="findBySqlReturnEntity" resultType="com.javapandeng.po.User">
           ${sql}
       </select>
   -->
    <update id="updateBysql">



                                ${sql}



    </update>
    <select id="findBySqlReturnEntity" resultType="com.javapandeng.po.User">



                                ${sql}



    </select>

    <select id="getBySqlReturnEntity" resultMap="ResultMapUser">
        ${sql}
    </select>
</mapper>